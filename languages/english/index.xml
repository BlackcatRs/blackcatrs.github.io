<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>English on Vithurshan SELVARAJAH</title><link>https://www.atomicl.net/languages/english/</link><description>Recent content in English on Vithurshan SELVARAJAH</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 09 May 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://www.atomicl.net/languages/english/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduction to Threads</title><link>https://www.atomicl.net/notes/thread/</link><pubDate>Thu, 09 May 2024 00:00:00 +0000</pubDate><guid>https://www.atomicl.net/notes/thread/</guid><description>A process is a set of instructions that is loaded into memory to be executed by a processor or a set of processors. The process description in memory contains all necessary information, such as the Instruction Pointer (also known as the Program Counter), which indicates the next instruction to be executed, as well as registers, variables, file handles, etc., that are needed by the scheduler to execute the program.</description></item><item><title>Concurrent Instruction Execution</title><link>https://www.atomicl.net/notes/concurrent_instruction_execution/</link><pubDate>Sun, 21 Apr 2024 00:00:00 +0000</pubDate><guid>https://www.atomicl.net/notes/concurrent_instruction_execution/</guid><description>The system call fork() is used to create new process which is a exact copy of the caller/parent process and the created process is called child process.
Here is an illustration of creating processes using the fork() function:
#include &amp;lt;stdio.h&amp;gt; #include &amp;lt;string.h&amp;gt; #include &amp;lt;unistd.h&amp;gt; #include &amp;lt;sys/types.h&amp;gt; #define MAX_COUNT 200 #define BUF_SIZE 100 void main(void) { pid_t pid; int i; char buf[BUF_SIZE]; fork(); pid = getpid(); for (i = 1; i &amp;lt;= MAX_COUNT; i++) { sprintf(buf, &amp;#34;This line is from pid %d, value = %d\n&amp;#34;, pid, i); write(1, buf, strlen(buf)); } } If the above program successfully executes up to the fork() function (marked with an arrow in the following figure):</description></item><item><title>Linux Process</title><link>https://www.atomicl.net/notes/linux_process/</link><pubDate>Wed, 13 Mar 2024 00:00:00 +0000</pubDate><guid>https://www.atomicl.net/notes/linux_process/</guid><description>Process Creation A process is a running instance of a program, or in other words, representation of a program when executing by the processor.
A program is a file that contains machine code, which can be understood and executed by a processor. It is obtained from code written in some programming language and undergoes a transformation to become machine code and thus a program.
Here is an example of code written in C programming language: #include &amp;lt;stdio.</description></item><item><title>Linux Audio</title><link>https://www.atomicl.net/notes/linux_audio/</link><pubDate>Sun, 18 Feb 2024 00:00:00 +0000</pubDate><guid>https://www.atomicl.net/notes/linux_audio/</guid><description>Sound The Arch sound system is organized into different layers:
Drivers and interface ‚Äì Hardware support and control, providing device drivers for audio hardware. Usermode API (libraries) ‚Äì Applications interact with this layer using libraries that offer a way to access sound-related functions. Usermode sound servers (optional) ‚Äì These servers, if used, enhance audio capabilities, especially in complex desktops with multiple simultaneous audio applications. Sound frameworks (optional) ‚Äì Optional frameworks offer a more abstract interface for developers working on audio-related applications, without relying on server processes.</description></item><item><title>How to Take Smart Notes</title><link>https://www.atomicl.net/books/how_to_take_smart_notes/</link><pubDate>Sun, 11 Feb 2024 00:00:00 +0000</pubDate><guid>https://www.atomicl.net/books/how_to_take_smart_notes/</guid><description>1. Note Taking üìö The act of writing holds utmost significance in the realm of studying. Studying is a research and we don&amp;#39;t study to do research, because it is a process of gaining unpredictable knowledge.
The result of a research must be public in academia and the result must contain a fact. A fact, by definition, can be reproduced by anyone, otherwise it is not a fact. And a fact does not belong to anyone, even to the researcher.</description></item><item><title>Encrypt external drives with Linux Unified Key Setup (LUKS)</title><link>https://www.atomicl.net/notes/luks_encrypt_external_drives/</link><pubDate>Tue, 02 Jan 2024 00:00:00 +0000</pubDate><guid>https://www.atomicl.net/notes/luks_encrypt_external_drives/</guid><description>1. Find your drive In order to find the correct drive to encrypt, run the lsblk command, then plug in your external storage device and run the lsblk command again. And now by comparing you can identify a new one appeared in the output of the last executed command.
The /dev/sdX drive referenced in this article is an imaginary device and be sure to replace it with your real device.</description></item><item><title>Brain Not Good at Qualifying Information</title><link>https://www.atomicl.net/posts/brain_not_good_at_qualifying_information/</link><pubDate>Thu, 14 Dec 2023 00:00:00 +0000</pubDate><guid>https://www.atomicl.net/posts/brain_not_good_at_qualifying_information/</guid><description>üß†üí° Unlocking the Secrets of the Brain! üöÄ
Ever wondered why our brains sometimes prioritize recently learned info over what&amp;#39;s truly important? ü§î It&amp;#39;s like having a mental &amp;#34;Last In, First Out&amp;#34; (LIFO) system! üîÑ
The brain tends to overestimate the importance of facts that are easily retrieved, creating a &amp;#34;Feature-positive&amp;#34; effect. üåü This means we might neglect valuable, harder-to-recall information in favor of the latest tidbits.
‚öñÔ∏è But fear not!</description></item><item><title>Hermeneutic circle</title><link>https://www.atomicl.net/posts/hermeneutic_circle/</link><pubDate>Fri, 17 Nov 2023 00:00:00 +0000</pubDate><guid>https://www.atomicl.net/posts/hermeneutic_circle/</guid><description>üìå Have you ever heard of the Hermeneutic circle of Hans-Georg Gadamer ?
üí° That is exactly what applies to cybersecurity. We can&amp;rsquo;t just explain a topic in cybersecurity without addressing related topics like networks, programming, systems, and other vulnerabilities.
What I learned after some of these years of study is that learning pentesting/cybersecurity is not a linear process, you can&amp;rsquo;t start from scratch.
References https://en.wikipedia.org/wiki/Hermeneutic_circle https://en.wikipedia.org/wiki/Hans-Georg_Gadamer</description></item><item><title>Emacs as Email Client</title><link>https://www.atomicl.net/notes/emacs-mu4e/</link><pubDate>Sat, 11 Nov 2023 00:00:00 +0000</pubDate><guid>https://www.atomicl.net/notes/emacs-mu4e/</guid><description>Emacs Mu4e We can use Emacs to consult mails with the help of various programs. Among them, Mu4e is a mail client for Emacs and it is considered as an Emacs interface for mu the mail indexer. A typical example might be a mail sync program like isync which downloads mail from the remote Maildir folder to the local Maildir folder and then the mu indexer will be used to index the mail.</description></item><item><title>Offline Email with Isync</title><link>https://www.atomicl.net/notes/isync/</link><pubDate>Sat, 11 Nov 2023 00:00:00 +0000</pubDate><guid>https://www.atomicl.net/notes/isync/</guid><description>Isync Install isync using your package manager, here we are installing the apt package manager, but use whatever package manager you are using:
sudo apt update &amp;amp;&amp;amp; sudo apt install isync We will use isync program to download mails to local Maildir folder. We can also use a program called offlineimap which is a bit slower but it can work on Windows. NOTE: isync is the name of the project, mbsync is the name of the executable.</description></item><item><title>Pentester's Toolbox</title><link>https://www.atomicl.net/notes/toolbox/</link><pubDate>Fri, 27 Oct 2023 00:00:00 +0000</pubDate><guid>https://www.atomicl.net/notes/toolbox/</guid><description>Table of Content&amp;#xa0;&amp;#xa0;&amp;#xa0;toc 1. Web Enumeration
1.1. Feroxbuster 1.2. Wfuzz 1.3. Whatweb 1.4. WPScan 2. Network Pivot
2.1. Ligolo-ng 3. Bind Shell | Reverse Shell | File Transfer
3.1. Powercat 3.2. Socat 3.3. Powershell 4. Remote Shell on Windows
4.1. Impacket-wmiexec 4.2. Impacket-psexec 4.3. Evil-winrm 4.4. Enter-PSSession 4.5. Pywinrm 5. Passwords Extraction
5.1. Mimikatz 5.2. Impacket-secretsdump 6. Linux Privilege Escalation
6.1. LinEnum - Linux PrivEsc 6.2. LinPEAS - Linux PrivEsc 6.</description></item><item><title>Change Users Default Shell</title><link>https://www.atomicl.net/notes/change_users_default_shell/</link><pubDate>Sat, 15 Jul 2023 00:00:00 +0000</pubDate><guid>https://www.atomicl.net/notes/change_users_default_shell/</guid><description>The shell is a program that interprets commands that we enter and there are several shells such as bash, sh, ksh, zsh, fish and many more. Bash (/bin/bash) is a popular shell on most if not all Linux systems, and it‚Äôs normally the default shell for user accounts.
We can also change or define a shell for a user to provide more functionality or block access to the shell using /sbin/nologin.</description></item><item><title>Install FTP Server</title><link>https://www.atomicl.net/notes/install_ftp_server/</link><pubDate>Sat, 15 Jul 2023 00:00:00 +0000</pubDate><guid>https://www.atomicl.net/notes/install_ftp_server/</guid><description>Introduction FTP stands for File Transfer Protocol which is used for transferring file between a centralized server and clients over a network. This tutorial describes the installation, configuration and securing process of FTP server. This tutorial uses VSFTPD as a FTP server software which stands Very Secure FTP Daemon.
The communication between FTP client and server is done by using two type of connection namely control connection and a data connection.</description></item><item><title>Programs I Use</title><link>https://www.atomicl.net/ecosystem/software/</link><pubDate>Sat, 06 May 2023 00:00:00 +0000</pubDate><guid>https://www.atomicl.net/ecosystem/software/</guid><description>Summary I&amp;rsquo;m a privacy conscious person and use free, minimalist, terminal-based programs on my computer that are easy to maintain in long term. I think a good software should answer your needs rather than the author&amp;rsquo;s. You can find my custom configuration within my .dotfiles folder.
Basic Operating System/Distribution
I like to start with a minimal operating system and then add software as needed. This way I am able to master most of the software on my system and learn things.</description></item><item><title>DWM - Dynamic Window Manager</title><link>https://www.atomicl.net/projects/blackdwm/</link><pubDate>Sun, 11 Sep 2022 00:00:00 +0000</pubDate><guid>https://www.atomicl.net/projects/blackdwm/</guid><description>This is a fork of DWM by suckless.org, an extremely fast, small and dynamic window manager for X. I added many patches and custom configuration to fit into my workflow. Requirements For Debian/Debian based systems sudo apt install make gcc libx11-dev libxft-dev libxinerama-dev xorg For Arch sudo pacman -S base-devel git libx11 libxft xorg-server xorg-xinit terminus-font Installation Clone the git repository:
git clone https://github.com/BlackcatRs/blackdwm.git Edit config.mk to match your local setup (dwm is installed into the /usr/local namespace by default).</description></item><item><title>Forward Local GPG Agent Socket through SSH Tunnel</title><link>https://www.atomicl.net/notes/forward_local_gpg_agent_socket_through_ssh_tunnel/</link><pubDate>Wed, 07 Sep 2022 00:00:00 +0000</pubDate><guid>https://www.atomicl.net/notes/forward_local_gpg_agent_socket_through_ssh_tunnel/</guid><description>Table of Contents Introduction Configure SSH Server Forward Local GPG Agent Socket GPG Agent Command Debug Socket Forwarding References Introduction gpg-agent is a daemon used to manage GPG secret (private) keys for the gpg and gpgsm programs. These programs interact with the gpg-agent daemon through a socket to request the secret key and request for the secret key.
If the gpg-agent process has the key, it provides it to gpg. If not, it tries to load the encrypted key from your keyring and prompts you for the key&amp;rsquo;s passphrase.</description></item></channel></rss>